{"version":3,"file":"component---src-pages-stats-index-js-218721695d58c5df9928.js","mappings":"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","sources":["webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticGroup.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticLabel.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticValue.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/views/Statistic/Statistic.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","webpack://sty-my-games/./src/pages/stats/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nexport default Segment;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Statistic from './Statistic';\n/**\n * A group of statistics.\n */\n\nfunction StatisticGroup(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      items = props.items,\n      size = props.size,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useWidthProp(widths), 'statistics', className);\n  var rest = getUnhandledProps(StatisticGroup, props);\n  var ElementType = getElementType(StatisticGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(items, function (item) {\n    return Statistic.create(item);\n  }));\n}\n\nStatisticGroup.handledProps = [\"as\", \"children\", \"className\", \"color\", \"content\", \"horizontal\", \"inverted\", \"items\", \"size\", \"widths\"];\nexport default StatisticGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A statistic can contain a label to help provide context for the presented value.\n */\n\nfunction StatisticLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(StatisticLabel, props);\n  var ElementType = getElementType(StatisticLabel, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nStatisticLabel.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nStatisticLabel.create = createShorthandFactory(StatisticLabel, function (content) {\n  return {\n    content: content\n  };\n});\nexport default StatisticLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A statistic can contain a numeric, icon, image, or text value.\n */\n\nfunction StatisticValue(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      text = props.text;\n  var classes = cx(useKeyOnly(text, 'text'), 'value', className);\n  var rest = getUnhandledProps(StatisticValue, props);\n  var ElementType = getElementType(StatisticValue, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nStatisticValue.handledProps = [\"as\", \"children\", \"className\", \"content\", \"text\"];\nStatisticValue.create = createShorthandFactory(StatisticValue, function (content) {\n  return {\n    content: content\n  };\n});\nexport default StatisticValue;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\nimport StatisticGroup from './StatisticGroup';\nimport StatisticLabel from './StatisticLabel';\nimport StatisticValue from './StatisticValue';\n/**\n * A statistic emphasizes the current value of an attribute.\n */\n\nfunction Statistic(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      floated = props.floated,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      label = props.label,\n      size = props.size,\n      text = props.text,\n      value = props.value;\n  var classes = cx('ui', color, size, useValueAndKey(floated, 'floated'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), 'statistic', className);\n  var rest = getUnhandledProps(Statistic, props);\n  var ElementType = getElementType(Statistic, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), StatisticValue.create(value, {\n    defaultProps: {\n      text: text\n    },\n    autoGenerateKey: false\n  }), StatisticLabel.create(label, {\n    autoGenerateKey: false\n  }));\n}\n\nStatistic.handledProps = [\"as\", \"children\", \"className\", \"color\", \"content\", \"floated\", \"horizontal\", \"inverted\", \"label\", \"size\", \"text\", \"value\"];\nStatistic.Group = StatisticGroup;\nStatistic.Label = StatisticLabel;\nStatistic.Value = StatisticValue;\nStatistic.create = createShorthandFactory(Statistic, function (content) {\n  return {\n    content: content\n  };\n});\nexport default Statistic;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nexport default Loader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Segment, Statistic, Loader } from 'semantic-ui-react';\r\n\r\nimport { getAllGames } from '../../functions/db';\r\nimport { setAllGames } from '../../reducers/gamesReducer';\r\n\r\nconst Stats = ({ setAllGames, allGames }) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        attemptGetAllGames();\r\n    });\r\n\r\n    async function attemptGetAllGames() {\r\n        if (loading || allGames) return;\r\n        setLoading(true);\r\n        try {\r\n            const newAllGames = await getAllGames();\r\n            setAllGames(newAllGames);\r\n        } catch {}\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Stats</h2>\r\n            <Segment>\r\n                {loading ? (\r\n                    <Statistic>\r\n                        <Statistic.Value>\r\n                            <Loader active size='massive' />\r\n                        </Statistic.Value>\r\n                    </Statistic>\r\n                ) : null}\r\n                <Statistic>\r\n                    <Statistic.Label>Total Games</Statistic.Label>\r\n                    <Statistic.Value>-</Statistic.Value>\r\n                </Statistic>\r\n                <Statistic>\r\n                    <Statistic.Label>Total Games</Statistic.Label>\r\n                    <Statistic.Value>-</Statistic.Value>\r\n                </Statistic>\r\n            </Segment>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setAllGames,\r\n};\r\n\r\nfunction mapStateToProps({ games }) {\r\n    return {\r\n        allGames: games.allGames,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);\r\n"],"names":["SegmentGroup","props","children","className","compact","content","horizontal","piled","raised","size","stacked","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","handledProps","SegmentInline","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","placeholder","padded","secondary","tertiary","textAlign","vertical","Group","Inline","StatisticGroup","items","widths","item","StatisticLabel","create","StatisticValue","text","Statistic","label","value","defaultProps","autoGenerateKey","Label","Value","Loader","active","indeterminate","inline","mapDispatchToProps","setAllGames","connect","allGames","games","React","setLoading","getAllGames","newAllGames","attemptGetAllGames"],"sourceRoot":""}