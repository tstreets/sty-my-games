{"version":3,"file":"component---src-pages-index-js-8b12e369b0df27498396.js","mappings":"wOASA,SAASA,EAAOC,GACd,IAAIC,EAASD,EAAMC,OACfC,EAAWF,EAAME,SACjBC,EAAYH,EAAMG,UAClBC,EAAUJ,EAAMI,QAChBC,EAAWL,EAAMK,SACjBC,EAAgBN,EAAMM,cACtBC,EAASP,EAAMO,OACfC,EAAWR,EAAMQ,SACjBC,EAAOT,EAAMS,KACbC,GAAU,OAAG,KAAMD,GAAM,QAAWR,EAAQ,WAAW,QAAWI,EAAU,aAAa,QAAWC,EAAe,kBAAkB,QAAWE,EAAU,aAAa,QAAWN,GAAYE,EAAS,SAAS,QAAoBG,EAAQ,UAAW,SAAUJ,GACjQQ,GAAO,EAAAC,EAAA,GAAkBb,EAAQC,GACjCa,GAAc,EAAAC,EAAA,GAAef,EAAQC,GACzC,OAAoB,gBAAoBa,GAAa,OAAS,GAAIF,EAAM,CACtER,UAAWO,IACTK,EAAA,GAAoBb,GAAYE,EAAUF,GAGhDH,EAAOiB,aAAe,CAAC,SAAU,KAAM,WAAY,YAAa,UAAW,WAAY,gBAAiB,SAAU,WAAY,QAC9H,Q,wCCTA,G,QAfiB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,IACvD,OACI,gBAAC,WAAD,KACI,sBAAIlB,UAAU,aACV,0BAAKc,GACL,0BAAKC,GACL,iCAASG,EAAT,KACA,yBACKD,EADL,IACkBD,EADlB,gBCAhB,EARsB,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACrB,OACI,gBAAC,WAAD,KACI,uBAAKC,UAAU,mBAAmBD,KCiD9C,EA7Ca,SAAC,GAA6B,IAAfoB,EAAc,EAA1BC,SAAYD,MACxB,GAAuBA,GAAS,IAAxBE,MAAAA,OAAR,MAAgB,GAAhB,EACA,EAAgCC,EAAAA,SAAeD,GAAxCE,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,EAAAA,UAAe,GAAtDG,EAAP,KAAwBC,EAAxB,KAYA,OAVAJ,EAAAA,WAAgB,WACPC,EAASI,QAAWF,IACrBC,GAAmB,IACnBE,EAAAA,EAAAA,IAAS,SAAAC,GACLL,EAAYK,GACZH,GAAmB,SAG5B,CAACF,EAAaE,EAAoBD,EAAiBF,IAGlD,gBAAC,WAAD,KACI,gBAACO,EAAA,EAAD,CAAW9B,UAAU,YACjB,gBAAC+B,EAAA,EAAD,CAAQ/B,UAAU,cAAcgC,GAAG,MAAnC,WAIA,gBAAC,EAAD,KACI,gBAAC,EAAD,CAAQlC,OAAQ2B,IACfF,EAASI,OACJJ,EAASU,KAAI,SAACC,EAAMC,GAChB,OAAKD,EAAKE,GAEN,gBAAC,WAAD,CAAgBC,IAAG,aAAeF,GAC9B,gBAAC,EAAaD,IAHD,QAOzB,MAGV,gBAACI,EAAA,EAAD,CACItC,UAAU,UACVmB,MAAK,iBAAOA,EAAP,CAAcE,MAAOE","sources":["webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","webpack://sty-my-games/./src/components/GameCard/index.js","webpack://sty-my-games/./src/components/GameCard/GameCardGroup.js","webpack://sty-my-games/./src/pages/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nexport default Loader;","import React from 'react';\r\nimport {} from 'semantic-ui-react';\r\nimport {} from 'gatsby';\r\n\r\nconst GameCard = ({ name, company, maxPlayers, minPlayers, age }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <li className='game-card'>\r\n                <h2>{name}</h2>\r\n                <h3>{company}</h3>\r\n                <p>Ages {age}+</p>\r\n                <p>\r\n                    {minPlayers}-{maxPlayers} players\r\n                </p>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GameCard;\r\n","import React from 'react';\r\nimport {} from 'semantic-ui-react';\r\n\r\nconst GameCardGroup = ({ children }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className='game-card-group'>{children}</div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GameCardGroup;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport { Container, Header, Loader } from 'semantic-ui-react';\r\n\r\nimport '../css/styles.css';\r\nimport Navbar from '../components/Navbar';\r\nimport { getGames } from '../functions/db';\r\nimport GameCard from '../components/GameCard';\r\nimport GameCardGroup from '../components/GameCard/GameCardGroup';\r\n\r\nconst Home = ({ location: { state } }) => {\r\n    const { games = [] } = state || {};\r\n    const [allGames, setAllGames] = React.useState(games);\r\n    const [allGamesLoading, setAllGamesLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        if (!allGames.length && !allGamesLoading) {\r\n            setAllGamesLoading(true);\r\n            getGames(newAllGames => {\r\n                setAllGames(newAllGames);\r\n                setAllGamesLoading(false);\r\n            });\r\n        }\r\n    }, [setAllGames, setAllGamesLoading, allGamesLoading, allGames]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className='fullsite'>\r\n                <Header className='page-header' as='h1'>\r\n                    Explore\r\n                </Header>\r\n\r\n                <GameCardGroup>\r\n                    <Loader active={allGamesLoading} />\r\n                    {allGames.length\r\n                        ? allGames.map((game, i) => {\r\n                              if (!game.id) return null;\r\n                              return (\r\n                                  <React.Fragment key={`game-card-${i}`}>\r\n                                      <GameCard {...game} />\r\n                                  </React.Fragment>\r\n                              );\r\n                          })\r\n                        : null}\r\n                </GameCardGroup>\r\n\r\n                <Navbar\r\n                    className='mt-auto'\r\n                    state={{ ...state, games: allGames }}\r\n                />\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["Loader","props","active","children","className","content","disabled","indeterminate","inline","inverted","size","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","handledProps","name","company","maxPlayers","minPlayers","age","state","location","games","React","allGames","setAllGames","allGamesLoading","setAllGamesLoading","length","getGames","newAllGames","Container","Header","as","map","game","i","id","key","Navbar"],"sourceRoot":""}