{"version":3,"file":"component---src-pages-search-index-js-5df1b14cc94353aa88af.js","mappings":"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","sources":["webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","webpack://sty-my-games/./src/components/GameCard/GameCardGroup.js","webpack://sty-my-games/./src/components/GameCard/index.js","webpack://sty-my-games/./src/search/SearchForm.js","webpack://sty-my-games/./src/pages/search/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nexport default Loader;","import React from 'react';\r\nimport {} from 'semantic-ui-react';\r\n\r\nconst GameCardGroup = ({ children }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className='game-card-group'>{children}</div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GameCardGroup;\r\n","import React from 'react';\r\nimport { Image } from 'semantic-ui-react';\r\nimport {} from 'gatsby';\r\n\r\nconst GameCard = ({\r\n    name,\r\n    company,\r\n    maxPlayers,\r\n    minPlayers,\r\n    age,\r\n    time,\r\n    picName,\r\n    picUrl,\r\n}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <li className='game-card'>\r\n                <h2>{name}</h2>\r\n                <h3>{company}</h3>\r\n                {picName && picUrl ? <Image src={picUrl} size='small' /> : null}\r\n                <p>Time ({time}mins)</p>\r\n                <p>Ages {age}+</p>\r\n                <p>\r\n                    {minPlayers}-{maxPlayers} players\r\n                </p>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GameCard;\r\n","import React from 'react';\r\nimport { Form, Input } from 'semantic-ui-react';\r\n\r\nimport FormField from '../components/FormField';\r\n\r\nconst SearchForm = ({ filters, setFilters }) => {\r\n    function changeFilters(e, { name, value }) {\r\n        if (name === 'minPlayers' || name === 'maxPlayers') {\r\n            if (isNaN(value)) return;\r\n            setFilters({ ...filters, [name]: Number(value) });\r\n        } else {\r\n            setFilters({ ...filters, [name]: value });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form style={{ marginBottom: '24px' }}>\r\n                <FormField\r\n                    control={Input}\r\n                    label='Name:'\r\n                    name='name'\r\n                    placeholder='Filter by name:'\r\n                    value={filters.name}\r\n                    onChange={changeFilters}\r\n                />\r\n                <Form.Group widths='equal'>\r\n                    <FormField\r\n                        control={Input}\r\n                        label={`Time Duration (${filters.time}mins):`}\r\n                        name='time'\r\n                        placeholder='Filter by time:'\r\n                        type='range'\r\n                        min={5}\r\n                        max={120}\r\n                        step={5}\r\n                        value={filters.time}\r\n                        onChange={changeFilters}\r\n                    />\r\n                    <FormField\r\n                        control={Input}\r\n                        label={`Recommended Age ${filters.age}+:`}\r\n                        name='age'\r\n                        placeholder='Filter by age:'\r\n                        type='range'\r\n                        min={2}\r\n                        max={19}\r\n                        step={1}\r\n                        value={filters.age}\r\n                        onChange={changeFilters}\r\n                    />\r\n                    <FormField\r\n                        control={Input}\r\n                        label='Min. Players:'\r\n                        name='minPlayers'\r\n                        placeholder='Filter by minimum players:'\r\n                        value={filters.minPlayers}\r\n                        onChange={changeFilters}\r\n                    />\r\n                    <FormField\r\n                        control={Input}\r\n                        label='Max Players:'\r\n                        name='maxPlayers'\r\n                        placeholder='Filter by maximum players:'\r\n                        value={filters.maxPlayers}\r\n                        onChange={changeFilters}\r\n                    />\r\n                </Form.Group>\r\n                <FormField\r\n                    control={Input}\r\n                    label='Company:'\r\n                    name='company'\r\n                    placeholder='Filter by company:'\r\n                    value={filters.company}\r\n                    onChange={changeFilters}\r\n                />\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport { Container, Header, Loader } from 'semantic-ui-react';\r\n\r\nimport '../../css/styles.css';\r\nimport Navbar from '../../components/Navbar';\r\nimport { getGames } from '../../functions/db';\r\n\r\nimport GameCard from '../../components/GameCard';\r\nimport GameCardGroup from '../../components/GameCard/GameCardGroup';\r\nimport SearchForm from '../../search/SearchForm';\r\n\r\nconst Search = ({ location: { state } }) => {\r\n    const { games = [] } = state || {};\r\n    const [allGames, setAllGames] = React.useState(games);\r\n    const [allGamesLoading, setAllGamesLoading] = React.useState(false);\r\n\r\n    const initialFilters = {\r\n        name: '',\r\n        age: 2,\r\n        minPlayers: 0,\r\n        maxPlayers: 10,\r\n        company: '',\r\n        time: 5,\r\n    };\r\n    const [filters, setFilters] = React.useState(initialFilters);\r\n\r\n    React.useEffect(() => {\r\n        if (!allGames.length && !allGamesLoading) {\r\n            setAllGamesLoading(true);\r\n            getGames(newAllGames => {\r\n                setAllGames(newAllGames);\r\n                setAllGamesLoading(false);\r\n            });\r\n        }\r\n    }, [setAllGames, setAllGamesLoading, allGamesLoading, allGames]);\r\n\r\n    const filtersGames = allGames\r\n        ? allGames.filter(\r\n              ({ name, company, age, minPlayers, maxPlayers, time }) => {\r\n                  if (\r\n                      filters.name &&\r\n                      !name.toLowerCase().includes(filters.name.toLowerCase())\r\n                  ) {\r\n                      return false;\r\n                  }\r\n                  if (filters.age > 2 && Number(filters.age) > Number(age)) {\r\n                      return false;\r\n                  }\r\n                  if (\r\n                      filters.company &&\r\n                      !company\r\n                          .toLowerCase()\r\n                          .includes(filters.company.toLowerCase())\r\n                  ) {\r\n                      return false;\r\n                  }\r\n                  if (\r\n                      maxPlayers &&\r\n                      (!(filters.minPlayers <= minPlayers) ||\r\n                          !(filters.maxPlayers >= maxPlayers))\r\n                  ) {\r\n                      return false;\r\n                  }\r\n                  if (filters.time > 5 && Number(filters.time) > Number(time)) {\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              }\r\n          )\r\n        : [];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className='fullsite'>\r\n                <Header className='page-header' as='h1'>\r\n                    Search\r\n                </Header>\r\n\r\n                <SearchForm filters={filters} setFilters={setFilters} />\r\n\r\n                <GameCardGroup>\r\n                    <Loader active={allGamesLoading} />\r\n                    {filtersGames.length\r\n                        ? filtersGames.map((game, i) => {\r\n                              if (!game.id) return null;\r\n                              return (\r\n                                  <React.Fragment key={`game-card-${i}`}>\r\n                                      <GameCard {...game} />\r\n                                  </React.Fragment>\r\n                              );\r\n                          })\r\n                        : null}\r\n                </GameCardGroup>\r\n\r\n                <Navbar\r\n                    className='mt-auto'\r\n                    state={{ ...state, games: allGames }}\r\n                />\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n"],"names":["Loader","props","active","children","className","content","disabled","indeterminate","inline","inverted","size","classes","rest","ElementType","handledProps","name","company","maxPlayers","minPlayers","age","time","picName","picUrl","src","filters","setFilters","changeFilters","e","value","isNaN","Number","Form","style","marginBottom","FormField","control","Input","label","placeholder","onChange","widths","type","min","max","step","state","location","games","React","allGames","setAllGames","allGamesLoading","setAllGamesLoading","length","getGames","newAllGames","filtersGames","filter","toLowerCase","includes","Container","Header","as","GameCardGroup","map","game","i","id","key","GameCard","Navbar"],"sourceRoot":""}