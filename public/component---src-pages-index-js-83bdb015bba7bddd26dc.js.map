{"version":3,"file":"component---src-pages-index-js-83bdb015bba7bddd26dc.js","mappings":"4NAYMA,EAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAGjBC,EAAO,CACTC,KAAM,GACNC,MAAO,GAGXH,EAAKI,UAAUC,SAAQ,SAAAC,GACfL,EAAKE,MAAQG,EAAEC,OAAS,KACxBN,EAAKC,KAAKM,KAAKF,GACfL,EAAKE,OAASG,EAAEC,WAIxB,IAAME,EAAaT,EAAKU,YAClBV,EAAKU,YACAC,MAAM,IACNC,QAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAI,OACrBC,KAAK,IACV,GAEAC,EACFP,EAAWF,OAASP,EAAKU,YAAYH,OAC5BE,EADT,MAEMA,EAAWF,OACXE,EACA,iBAEV,OACI,gBAAC,WAAD,KACI,sBAAIQ,UAAU,YACV,gBAAC,EAAAC,KAAD,CAAMC,GAAE,UAAYnB,EAAKoB,GAAMrB,MAAOA,GAClC,gBAACsB,EAAA,EAAD,CAAQJ,UAAU,kBAAkBK,GAAG,MAClCtB,EAAKuB,MAEV,qBAAGN,UAAU,iBAAiBD,GAC9B,uBACIC,UAAU,iBACVO,KAAK,MACL,aAAYxB,EAAKuB,KACjBE,MAAO,CAAEC,gBAAgB,OAAQ1B,EAAK2B,YAAd,QAGhC,sBAAIV,UAAU,sBAEThB,EAAKC,KAAK0B,KAAI,SAACC,EAAGf,GACf,OACI,sBACIG,UAAU,eACVa,IAAG,iBAAmBhB,GAErBe,UAUjC/B,EAASiC,MAtEoB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACtC,OACI,gBAAC,WAAD,KACI,0BAAKD,GAAYC,KAqE7B,Q,UC9BA,EAxCa,SAAC,GAA6B,IAAflC,EAAc,EAA1BmC,SAAYnC,MACxB,EAAgCoC,EAAAA,SAAepC,EAAMqC,UAAY,MAA1DA,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,EAAAA,UAAe,GAAtDG,EAAP,KAAwBC,EAAxB,KAFsC,wCAQtC,wFACQD,IAAmBF,EAD3B,wDAEIG,GAAmB,GAFvB,mBAIkCC,EAAAA,EAAAA,KAJlC,OAIcC,EAJd,OAKQJ,EAAYI,GALpB,0DAOIF,GAAmB,GAPvB,2DARsC,sBAkBtC,OAdAJ,EAAAA,WAAgB,YAJsB,mCAKlCO,MAcA,gBAAC,WAAD,KACI,qCACA,gBAAC,QAAD,KACKN,GAAYA,EAAS7B,OAClB6B,EAASR,KAAI,SAACe,EAAG7B,GACb,OACI,gBAAC,EAAD,CACIgB,IAAG,aAAehB,EAAf,IAAoB6B,EAAEvB,GACzBpB,KAAM2C,EACN5C,MAAK,iBAAQA,GAAS,GAAjB,CAAsBqC,SAAUA,SAKjD","sources":["webpack://sty-my-games/./src/components/GameCard/index.js","webpack://sty-my-games/./src/pages/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { Header } from 'semantic-ui-react';\r\n\r\nexport const GameCardGroup = ({ children, content }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <ul>{children || content}</ul>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst GameCard = ({ state, game }) => {\r\n    // console.log(game);\r\n\r\n    const tags = {\r\n        list: [],\r\n        count: 0,\r\n    };\r\n\r\n    game.mechanics.forEach(m => {\r\n        if (tags.count + m.length < 48) {\r\n            tags.list.push(m);\r\n            tags.count += m.length;\r\n        }\r\n    });\r\n\r\n    const descString = game.description\r\n        ? game.description\r\n              .split('')\r\n              .filter((a, i) => i < 150)\r\n              .join('')\r\n        : '';\r\n\r\n    const finalString =\r\n        descString.length < game.description.length\r\n            ? `${descString}...`\r\n            : descString.length\r\n            ? descString\r\n            : 'No description';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <li className='gamecard'>\r\n                <Link to={`/game#/${game.id}`} state={state}>\r\n                    <Header className='gamecard-header' as='h3'>\r\n                        {game.name}\r\n                    </Header>\r\n                    <p className='gamecard-text'>{finalString}</p>\r\n                    <div\r\n                        className='gamecard-image'\r\n                        role='img'\r\n                        aria-label={game.name}\r\n                        style={{ backgroundImage: `url(${game.backupImage})` }}\r\n                    />\r\n                </Link>\r\n                <ul className='gamecard-otherinfo'>\r\n                    {/* 64 is max char length */}\r\n                    {tags.list.map((t, i) => {\r\n                        return (\r\n                            <li\r\n                                className='gamecard-tag'\r\n                                key={`game-card-tag-${i}`}\r\n                            >\r\n                                {t}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nGameCard.Group = GameCardGroup;\r\n\r\nexport default GameCard;\r\n","import React from 'react';\r\nimport {} from 'semantic-ui-react';\r\n\r\nimport GameCard from '../components/GameCard';\r\nimport { getAllGames } from '../functions/db';\r\n\r\nconst Home = ({ location: { state } }) => {\r\n    const [allGames, setAllGames] = React.useState(state.allGames || null);\r\n    const [allGamesLoading, setAllGamesLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        attemptGetAllGames();\r\n    });\r\n\r\n    async function attemptGetAllGames() {\r\n        if (allGamesLoading || allGames) return;\r\n        setAllGamesLoading(true);\r\n        try {\r\n            const newAllGames = await getAllGames();\r\n            setAllGames(newAllGames);\r\n        } catch {}\r\n        setAllGamesLoading(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Explore</h2>\r\n            <GameCard.Group>\r\n                {allGames && allGames.length ? (\r\n                    allGames.map((g, i) => {\r\n                        return (\r\n                            <GameCard\r\n                                key={`game-card-${i}-${g.id}`}\r\n                                game={g}\r\n                                state={{ ...(state || {}), allGames: allGames }}\r\n                            ></GameCard>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <p>Sorry, no games available.</p>\r\n                )}\r\n            </GameCard.Group>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["GameCard","state","game","tags","list","count","mechanics","forEach","m","length","push","descString","description","split","filter","a","i","join","finalString","className","Link","to","id","Header","as","name","role","style","backgroundImage","backupImage","map","t","key","Group","children","content","location","React","allGames","setAllGames","allGamesLoading","setAllGamesLoading","getAllGames","newAllGames","attemptGetAllGames","g"],"sourceRoot":""}