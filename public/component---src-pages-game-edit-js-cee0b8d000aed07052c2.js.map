{"version":3,"file":"component---src-pages-game-edit-js-cee0b8d000aed07052c2.js","mappings":"6LAoBA,MATA,SAAiBA,EAAYC,GAC3B,IAAIC,GAAS,EACTC,GAAS,EAAAC,EAAA,GAAYJ,GAAcK,MAAML,EAAWM,QAAU,GAIlE,OAHA,OAASN,GAAY,SAAUO,EAAOC,EAAKR,GACzCG,IAASD,GAASD,EAASM,EAAOC,EAAKR,MAElCG,G,UCmCT,MALA,SAAaH,EAAYC,GAEvB,QADW,EAAAQ,EAAA,GAAQT,GAAc,IAAW,GAChCA,GAAY,OAAaC,EAAU,M,wECvBjD,WAAeS,EAAAA,EAAAA,KAPf,YAAoC,IAATC,EAAQ,EAARA,KACvB,MAAO,CACHC,KAAMD,EAAKC,KACXC,QAASF,EAAKE,WALK,GAS3B,EArBiB,SAAC,GAA4B,IACpCC,EADmC,EAAzBC,SAAYC,KACLC,MAAM,KAC7B,OACI,gBAAC,WAAD,KACI,uCACA,gBAAC,EAAAC,KAAD,CAAMC,GAAE,UAAYL,EAAU,IAC1B,gBAAC,IAAD,sB,qBCXD,SAASM,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E","sources":["webpack://sty-my-games/./node_modules/lodash-es/_baseMap.js","webpack://sty-my-games/./node_modules/lodash-es/map.js","webpack://sty-my-games/./src/pages/game/edit.js","webpack://sty-my-games/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\n\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n  baseEach(collection, function (value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\n\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst EditGame = ({ location: { hash } }) => {\r\n    const splitHash = hash.split('/');\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Edit Game</h1>\r\n            <Link to={`/game#/${splitHash[1]}`}>\r\n                <Button>Go Back</Button>\r\n            </Link>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nfunction mapStateToProps({ auth }) {\r\n    return {\r\n        user: auth.user,\r\n        isAdmin: auth.isAdmin,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGame);\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"names":["collection","iteratee","index","result","isArrayLike","Array","length","value","key","isArray","connect","auth","user","isAdmin","splitHash","location","hash","split","Link","to","_assertThisInitialized","self","ReferenceError"],"sourceRoot":""}