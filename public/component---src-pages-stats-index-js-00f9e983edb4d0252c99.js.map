{"version":3,"file":"component---src-pages-stats-index-js-00f9e983edb4d0252c99.js","mappings":"wOAQA,SAASA,EAAWC,GAClB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAWH,EAAMG,SACjBC,EAAQJ,EAAMI,MACdC,EAAUL,EAAMK,QAChBC,EAAcN,EAAMM,YACpBC,EAASP,EAAMO,OACfC,EAAOR,EAAMQ,KACbC,EAAYT,EAAMS,UAClBC,EAASV,EAAMU,OACfC,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBC,EAAab,EAAMa,WACnBC,EAAQd,EAAMc,MACdC,GAAU,OAAGX,GAAO,QAAWK,EAAW,cAAc,QAAgBD,EAAM,SAAS,QAAiBG,IAAY,QAAeN,EAAS,YAAY,QAAqBO,IAAgB,QAAaT,EAAU,kBAAkB,QAAaG,EAAa,sBAAsB,QAAaC,EAAQ,gBAAgB,QAAaG,EAAQ,gBAAgB,QAAaG,EAAY,oBAAoB,QAAaC,EAAO,QAAS,SAAUZ,GACpbc,GAAO,EAAAC,EAAA,GAAkBlB,EAAYC,GACrCkB,GAAc,EAAAC,EAAA,GAAepB,EAAYC,GAC7C,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACTd,GAGNF,EAAWqB,aAAe,CAAC,KAAM,WAAY,YAAa,QAAS,WAAY,UAAW,cAAe,SAAU,OAAQ,YAAa,SAAU,YAAa,gBAAiB,aAAc,SAC9LrB,EAAWsB,QAAS,QAAuBtB,GAAY,SAAUE,GAC/D,MAAO,CACLA,SAAUA,MAGd,QC7BA,SAASqB,EAAQtB,GACf,IAAIuB,EAAWvB,EAAMuB,SACjBtB,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBE,EAAQJ,EAAMI,MACdoB,EAAUxB,EAAMwB,QAChBC,EAAUzB,EAAMyB,QAChBjB,EAAOR,EAAMQ,KACbkB,EAAW1B,EAAM0B,SACjBjB,EAAYT,EAAMS,UAClBE,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBG,GAAU,OAAGX,GAAO,QAAWmB,EAAU,aAAa,QAAWE,EAAS,YAAY,QAAWhB,EAAW,cAAc,QAAgBD,EAAM,SAAS,QAAgBkB,EAAU,aAAa,QAAiBf,IAAY,QAAqBC,IAAgB,QAAaY,EAAS,UAAU,GAAO,MAAOtB,GAChTc,GAAO,EAAAC,EAAA,GAAkBK,EAAStB,GAClCkB,GAAc,EAAAC,EAAA,GAAeG,EAAStB,GAC1C,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACTd,GAGNqB,EAAQF,aAAe,CAAC,KAAM,WAAY,WAAY,YAAa,QAAS,UAAW,UAAW,OAAQ,WAAY,YAAa,YAAa,iBAChJ,QCnBA,SAASO,EAAK3B,GACZ,IAAI4B,EAAS5B,EAAM4B,OACfL,EAAWvB,EAAMuB,SACjBtB,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBsB,EAAUxB,EAAMwB,QAChBK,EAAY7B,EAAM6B,UAClBJ,EAAUzB,EAAMyB,QAChBK,EAAW9B,EAAM8B,SACjBC,EAAW/B,EAAM+B,SACjBC,EAAShC,EAAMgC,OACfC,EAAUjC,EAAMiC,QAChBP,EAAW1B,EAAM0B,SACjBQ,EAAYlC,EAAMkC,UAClBzB,EAAYT,EAAMS,UAClBE,EAAYX,EAAMW,UAClBC,EAAgBZ,EAAMY,cACtBG,GAAU,OAAG,MAAM,QAAWQ,EAAU,aAAa,QAAWM,EAAW,cAAc,QAAWC,EAAU,aAAa,QAAWC,EAAU,aAAa,QAAWG,EAAW,cAAc,QAAWzB,EAAW,cAAc,QAAoBmB,EAAQ,WAAW,QAAoBH,EAAS,YAAY,QAAoBO,EAAQ,WAAW,QAAoBC,EAAS,YAAY,QAAgBP,EAAU,aAAa,QAAiBf,IAAY,QAAqBC,IAAgB,QAAaY,EAAS,UAAU,GAAO,OAAQtB,GAC7hBc,GAAO,EAAAC,EAAA,GAAkBU,EAAM3B,GAC/BkB,GAAc,EAAAC,EAAA,GAAeQ,EAAM3B,GACvC,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACTd,GAGN0B,EAAKP,aAAe,CAAC,KAAM,SAAU,WAAY,WAAY,YAAa,UAAW,YAAa,UAAW,WAAY,WAAY,SAAU,UAAW,WAAY,YAAa,YAAa,YAAa,iBAC7MO,EAAKQ,OAAS,EACdR,EAAKS,IAAM,EACX,Q,UC7BA,SAASC,EAAarC,GACpB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBoC,EAAUtC,EAAMsC,QAChBC,EAAUvC,EAAMuC,QAChBC,EAAaxC,EAAMwC,WACnBC,EAAQzC,EAAMyC,MACdC,EAAS1C,EAAM0C,OACfC,EAAO3C,EAAM2C,KACbC,EAAU5C,EAAM4C,QAChB7B,GAAU,OAAG,KAAM4B,GAAM,QAAWL,EAAS,YAAY,QAAWE,EAAY,eAAe,QAAWC,EAAO,UAAU,QAAWC,EAAQ,WAAW,QAAWE,EAAS,WAAY,WAAY1C,GACrMc,GAAO,EAAAC,EAAA,GAAkBoB,EAAcrC,GACvCkB,GAAc,EAAAC,EAAA,GAAekB,EAAcrC,GAC/C,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACT8B,EAAA,GAAoB5C,GAAYsC,EAAUtC,GAGhDoC,EAAajB,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,UAAW,aAAc,QAAS,SAAU,OAAQ,WAC3H,QCpBA,SAAS0B,EAAc9C,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBqC,EAAUvC,EAAMuC,QAChBxB,GAAU,OAAG,SAAUb,GACvBc,GAAO,EAAAC,EAAA,GAAkB6B,EAAe9C,GACxCkB,GAAc,EAAAC,EAAA,GAAe2B,EAAe9C,GAChD,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACT8B,EAAA,GAAoB5C,GAAYsC,EAAUtC,GAGhD6C,EAAc1B,aAAe,CAAC,KAAM,WAAY,YAAa,WAC7D,QCVA,SAAS2B,EAAQ/C,GACf,IAAIgD,EAAWhD,EAAMgD,SACjBC,EAAQjD,EAAMiD,MACdhD,EAAWD,EAAMC,SACjBiD,EAAWlD,EAAMkD,SACjBhD,EAAYF,EAAME,UAClBiD,EAAWnD,EAAMmD,SACjB/C,EAAQJ,EAAMI,MACdkC,EAAUtC,EAAMsC,QAChBC,EAAUvC,EAAMuC,QAChBa,EAAWpD,EAAMoD,SACjB/C,EAAUL,EAAMK,QAChB0B,EAAW/B,EAAM+B,SACjBsB,EAAUrD,EAAMqD,QAChBC,EAActD,EAAMsD,YACpBtB,EAAShC,EAAMgC,OACfS,EAAQzC,EAAMyC,MACdC,EAAS1C,EAAM0C,OACfa,EAAYvD,EAAMuD,UAClBZ,EAAO3C,EAAM2C,KACbC,EAAU5C,EAAM4C,QAChBY,EAAWxD,EAAMwD,SACjB7C,EAAYX,EAAMW,UAClB8C,EAAWzD,EAAMyD,SACjB1C,GAAU,OAAG,KAAMX,EAAOuC,GAAM,QAAWM,EAAO,UAAU,QAAWC,EAAU,aAAa,QAAWC,EAAU,aAAa,QAAWb,EAAS,YAAY,QAAWc,EAAU,aAAa,QAAWrB,EAAU,aAAa,QAAWsB,EAAS,YAAY,QAAWC,EAAa,gBAAgB,QAAWb,EAAO,UAAU,QAAWC,EAAQ,WAAW,QAAWa,EAAW,cAAc,QAAWX,EAAS,YAAY,QAAWY,EAAU,aAAa,QAAWC,EAAU,aAAa,QAAoBT,EAAU,aAAa,QAAoBhB,EAAQ,WAAW,QAAiBrB,IAAY,QAAeN,EAAS,WAAY,UAAWH,GAC5oBc,GAAO,EAAAC,EAAA,GAAkB8B,EAAS/C,GAClCkB,GAAc,EAAAC,EAAA,GAAe4B,EAAS/C,GAC1C,OAAoB,gBAAoBkB,GAAa,OAAS,GAAIF,EAAM,CACtEd,UAAWa,IACT8B,EAAA,GAAoB5C,GAAYsC,EAAUtC,GAGhD8C,EAAQ3B,aAAe,CAAC,KAAM,WAAY,QAAS,WAAY,WAAY,YAAa,WAAY,QAAS,UAAW,UAAW,WAAY,UAAW,WAAY,UAAW,SAAU,QAAS,cAAe,SAAU,YAAa,OAAQ,UAAW,WAAY,YAAa,YACtR2B,EAAQW,MAAQ,EAChBX,EAAQY,OAAS,EACjB,Q,wCC2BA,EAlEc,SAAC,GAA6B,IAAfC,EAAc,EAA1BC,SAAYD,MACrBE,EAAW,KAEf,SAASC,EAAiBC,GAClBF,IAAaE,EAAEC,gBACfH,EAAWE,EAAEC,eAIrB,SAASC,EAASF,GACd,GAAKF,EAAL,CACA,IAAMK,EAAQH,EAAEC,cAAcG,WAAU,GACxCD,EAAME,UAAYC,EAClBR,EAASS,YAAYJ,IAGzB,SAASG,EAAcN,GACdF,GACLA,EAASS,YAAYP,EAAEC,eAG3B,OACI,gBAAC,WAAD,KACI,gBAACO,EAAA,EAAD,CAAWtE,UAAU,YACjB,gBAACuE,EAAA,EAAD,CAAQvE,UAAU,cAAcwE,GAAG,MAAnC,SAGA,gBAACC,EAAA,EAAD,CACIC,KAAK,IACLjC,KAAK,OACLkC,WAAW,EACXR,UAAWH,IAEf,gBAACS,EAAA,EAAD,CACIC,KAAK,SACLjC,KAAK,OACLkC,WAAW,EACXR,UAAWH,IAEf,gBAAC,EAAD,CAAM1C,QAAS,GACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGsD,KAAI,SAAAC,GAC7B,OACI,gBAAC,WAAD,CAAgBC,IAAG,UAAYD,GAC3B,gBAAC,SAAD,KACI,gBAAC,EAAD,CACIE,MAAO,CACHnE,MAAO,QACPoE,OAAQ,QACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,cAErBC,WAAYxB,UAOpC,gBAACyB,EAAA,EAAD,CAAQtF,UAAU,UAAU0D,MAAOA","sources":["webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack://sty-my-games/./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","webpack://sty-my-games/./src/pages/stats/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nexport default Segment;","import React from 'react';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport { Container, Grid, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nimport '../../css/styles.css';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nconst Stats = ({ location: { state } }) => {\r\n    let dropArea = null;\r\n\r\n    function changeDropTarget(e) {\r\n        if (dropArea !== e.currentTarget) {\r\n            dropArea = e.currentTarget;\r\n        }\r\n    }\r\n\r\n    function dropIcon(e) {\r\n        if (!dropArea) return;\r\n        const clone = e.currentTarget.cloneNode(true);\r\n        clone.onDragEnd = dropCloneIcon;\r\n        dropArea.appendChild(clone);\r\n    }\r\n\r\n    function dropCloneIcon(e) {\r\n        if (!dropArea) return;\r\n        dropArea.appendChild(e.currentTarget);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className='fullsite'>\r\n                <Header className='page-header' as='h1'>\r\n                    Stats\r\n                </Header>\r\n                <Icon\r\n                    name='x'\r\n                    size='huge'\r\n                    draggable={true}\r\n                    onDragEnd={dropIcon}\r\n                />\r\n                <Icon\r\n                    name='circle'\r\n                    size='huge'\r\n                    draggable={true}\r\n                    onDragEnd={dropIcon}\r\n                />\r\n                <Grid columns={3}>\r\n                    {[1, 2, 3, 4, 5, 6, 7, 8, 9].map(i => {\r\n                        return (\r\n                            <React.Fragment key={`square-${i}`}>\r\n                                <Grid.Column>\r\n                                    <Segment\r\n                                        style={{\r\n                                            width: '100px',\r\n                                            height: '100px',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            backgroundColor: 'lightcoral',\r\n                                        }}\r\n                                        onDragOver={changeDropTarget}\r\n                                    ></Segment>\r\n                                </Grid.Column>\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </Grid>\r\n                <Navbar className='mt-auto' state={state} />\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Stats;\r\n"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","SegmentGroup","compact","content","horizontal","piled","raised","size","stacked","childrenUtils","SegmentInline","Segment","attached","basic","circular","clearing","disabled","loading","placeholder","secondary","tertiary","vertical","Group","Inline","state","location","dropArea","changeDropTarget","e","currentTarget","dropIcon","clone","cloneNode","onDragEnd","dropCloneIcon","appendChild","Container","Header","as","Icon","name","draggable","map","i","key","style","height","display","alignItems","justifyContent","backgroundColor","onDragOver","Navbar"],"sourceRoot":""}